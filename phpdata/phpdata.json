{
    "info": {
        "title": "PHP-CRUD-API",
        "version": "1.0.0"
    },
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "http://localhost:9001/api.php/api.php"
        }
    ],
    "paths": {
        "/records/article": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "article"
                ],
                "operationId": "list_article",
                "description": "list article",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-article"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-article"
                },
                "tags": [
                    "article"
                ],
                "operationId": "create_article",
                "description": "create article",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/article/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "article"
                ],
                "operationId": "read_article",
                "description": "read article",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-article"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-article"
                },
                "tags": [
                    "article"
                ],
                "operationId": "update_article",
                "description": "update article",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "article"
                ],
                "operationId": "delete_article",
                "description": "delete article",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-article"
                },
                "tags": [
                    "article"
                ],
                "operationId": "increment_article",
                "description": "increment article",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/comments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "comments"
                ],
                "operationId": "list_comments",
                "description": "list comments",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-comments"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-comments"
                },
                "tags": [
                    "comments"
                ],
                "operationId": "create_comments",
                "description": "create comments",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/comments/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "comments"
                ],
                "operationId": "read_comments",
                "description": "read comments",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-comments"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-comments"
                },
                "tags": [
                    "comments"
                ],
                "operationId": "update_comments",
                "description": "update comments",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "comments"
                ],
                "operationId": "delete_comments",
                "description": "delete comments",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-comments"
                },
                "tags": [
                    "comments"
                ],
                "operationId": "increment_comments",
                "description": "increment comments",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/fileproject": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileproject"
                ],
                "operationId": "list_fileproject",
                "description": "list fileproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-fileproject"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-fileproject"
                },
                "tags": [
                    "fileproject"
                ],
                "operationId": "create_fileproject",
                "description": "create fileproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/fileproject/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileproject"
                ],
                "operationId": "read_fileproject",
                "description": "read fileproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-fileproject"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-fileproject"
                },
                "tags": [
                    "fileproject"
                ],
                "operationId": "update_fileproject",
                "description": "update fileproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "fileproject"
                ],
                "operationId": "delete_fileproject",
                "description": "delete fileproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-fileproject"
                },
                "tags": [
                    "fileproject"
                ],
                "operationId": "increment_fileproject",
                "description": "increment fileproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/fileprojectuser": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileprojectuser"
                ],
                "operationId": "list_fileprojectuser",
                "description": "list fileprojectuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-fileprojectuser"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-fileprojectuser"
                },
                "tags": [
                    "fileprojectuser"
                ],
                "operationId": "create_fileprojectuser",
                "description": "create fileprojectuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/fileprojectuser/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileprojectuser"
                ],
                "operationId": "read_fileprojectuser",
                "description": "read fileprojectuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-fileprojectuser"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-fileprojectuser"
                },
                "tags": [
                    "fileprojectuser"
                ],
                "operationId": "update_fileprojectuser",
                "description": "update fileprojectuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "fileprojectuser"
                ],
                "operationId": "delete_fileprojectuser",
                "description": "delete fileprojectuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-fileprojectuser"
                },
                "tags": [
                    "fileprojectuser"
                ],
                "operationId": "increment_fileprojectuser",
                "description": "increment fileprojectuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/filerole": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "filerole"
                ],
                "operationId": "list_filerole",
                "description": "list filerole",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-filerole"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-filerole"
                },
                "tags": [
                    "filerole"
                ],
                "operationId": "create_filerole",
                "description": "create filerole",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/filerole/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "filerole"
                ],
                "operationId": "read_filerole",
                "description": "read filerole",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-filerole"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-filerole"
                },
                "tags": [
                    "filerole"
                ],
                "operationId": "update_filerole",
                "description": "update filerole",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "filerole"
                ],
                "operationId": "delete_filerole",
                "description": "delete filerole",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-filerole"
                },
                "tags": [
                    "filerole"
                ],
                "operationId": "increment_filerole",
                "description": "increment filerole",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/fileroleproject": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileroleproject"
                ],
                "operationId": "list_fileroleproject",
                "description": "list fileroleproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-fileroleproject"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-fileroleproject"
                },
                "tags": [
                    "fileroleproject"
                ],
                "operationId": "create_fileroleproject",
                "description": "create fileroleproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/fileroleproject/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileroleproject"
                ],
                "operationId": "read_fileroleproject",
                "description": "read fileroleproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-fileroleproject"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-fileroleproject"
                },
                "tags": [
                    "fileroleproject"
                ],
                "operationId": "update_fileroleproject",
                "description": "update fileroleproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "fileroleproject"
                ],
                "operationId": "delete_fileroleproject",
                "description": "delete fileroleproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-fileroleproject"
                },
                "tags": [
                    "fileroleproject"
                ],
                "operationId": "increment_fileroleproject",
                "description": "increment fileroleproject",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/fileuser": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileuser"
                ],
                "operationId": "list_fileuser",
                "description": "list fileuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-fileuser"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-fileuser"
                },
                "tags": [
                    "fileuser"
                ],
                "operationId": "create_fileuser",
                "description": "create fileuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/fileuser/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileuser"
                ],
                "operationId": "read_fileuser",
                "description": "read fileuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-fileuser"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-fileuser"
                },
                "tags": [
                    "fileuser"
                ],
                "operationId": "update_fileuser",
                "description": "update fileuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "fileuser"
                ],
                "operationId": "delete_fileuser",
                "description": "delete fileuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-fileuser"
                },
                "tags": [
                    "fileuser"
                ],
                "operationId": "increment_fileuser",
                "description": "increment fileuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/fileversion": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileversion"
                ],
                "operationId": "list_fileversion",
                "description": "list fileversion",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-fileversion"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-fileversion"
                },
                "tags": [
                    "fileversion"
                ],
                "operationId": "create_fileversion",
                "description": "create fileversion",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/fileversion/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "fileversion"
                ],
                "operationId": "read_fileversion",
                "description": "read fileversion",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-fileversion"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-fileversion"
                },
                "tags": [
                    "fileversion"
                ],
                "operationId": "update_fileversion",
                "description": "update fileversion",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "fileversion"
                ],
                "operationId": "delete_fileversion",
                "description": "delete fileversion",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-fileversion"
                },
                "tags": [
                    "fileversion"
                ],
                "operationId": "increment_fileversion",
                "description": "increment fileversion",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/logs": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "logs"
                ],
                "operationId": "list_logs",
                "description": "list logs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-logs"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-logs"
                },
                "tags": [
                    "logs"
                ],
                "operationId": "create_logs",
                "description": "create logs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/logs/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "logs"
                ],
                "operationId": "read_logs",
                "description": "read logs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-logs"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-logs"
                },
                "tags": [
                    "logs"
                ],
                "operationId": "update_logs",
                "description": "update logs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "logs"
                ],
                "operationId": "delete_logs",
                "description": "delete logs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-logs"
                },
                "tags": [
                    "logs"
                ],
                "operationId": "increment_logs",
                "description": "increment logs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/mp": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "mp"
                ],
                "operationId": "list_mp",
                "description": "list mp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-mp"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-mp"
                },
                "tags": [
                    "mp"
                ],
                "operationId": "create_mp",
                "description": "create mp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/mp/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "mp"
                ],
                "operationId": "read_mp",
                "description": "read mp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-mp"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-mp"
                },
                "tags": [
                    "mp"
                ],
                "operationId": "update_mp",
                "description": "update mp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "mp"
                ],
                "operationId": "delete_mp",
                "description": "delete mp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-mp"
                },
                "tags": [
                    "mp"
                ],
                "operationId": "increment_mp",
                "description": "increment mp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/nsgame": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "nsgame"
                ],
                "operationId": "list_nsgame",
                "description": "list nsgame",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-nsgame"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-nsgame"
                },
                "tags": [
                    "nsgame"
                ],
                "operationId": "create_nsgame",
                "description": "create nsgame",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/nsgame/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "nsgame"
                ],
                "operationId": "read_nsgame",
                "description": "read nsgame",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-nsgame"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-nsgame"
                },
                "tags": [
                    "nsgame"
                ],
                "operationId": "update_nsgame",
                "description": "update nsgame",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "nsgame"
                ],
                "operationId": "delete_nsgame",
                "description": "delete nsgame",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-nsgame"
                },
                "tags": [
                    "nsgame"
                ],
                "operationId": "increment_nsgame",
                "description": "increment nsgame",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/nsorder": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "nsorder"
                ],
                "operationId": "list_nsorder",
                "description": "list nsorder",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-nsorder"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-nsorder"
                },
                "tags": [
                    "nsorder"
                ],
                "operationId": "create_nsorder",
                "description": "create nsorder",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/nsorder/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "nsorder"
                ],
                "operationId": "read_nsorder",
                "description": "read nsorder",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-nsorder"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-nsorder"
                },
                "tags": [
                    "nsorder"
                ],
                "operationId": "update_nsorder",
                "description": "update nsorder",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "nsorder"
                ],
                "operationId": "delete_nsorder",
                "description": "delete nsorder",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-nsorder"
                },
                "tags": [
                    "nsorder"
                ],
                "operationId": "increment_nsorder",
                "description": "increment nsorder",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/nsuser": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "nsuser"
                ],
                "operationId": "list_nsuser",
                "description": "list nsuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-nsuser"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-nsuser"
                },
                "tags": [
                    "nsuser"
                ],
                "operationId": "create_nsuser",
                "description": "create nsuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/nsuser/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "nsuser"
                ],
                "operationId": "read_nsuser",
                "description": "read nsuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-nsuser"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-nsuser"
                },
                "tags": [
                    "nsuser"
                ],
                "operationId": "update_nsuser",
                "description": "update nsuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "nsuser"
                ],
                "operationId": "delete_nsuser",
                "description": "delete nsuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-nsuser"
                },
                "tags": [
                    "nsuser"
                ],
                "operationId": "increment_nsuser",
                "description": "increment nsuser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/sampletemp": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "sampletemp"
                ],
                "operationId": "list_sampletemp",
                "description": "list sampletemp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-sampletemp"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-sampletemp"
                },
                "tags": [
                    "sampletemp"
                ],
                "operationId": "create_sampletemp",
                "description": "create sampletemp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/sampletemp/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "sampletemp"
                ],
                "operationId": "read_sampletemp",
                "description": "read sampletemp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-sampletemp"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-sampletemp"
                },
                "tags": [
                    "sampletemp"
                ],
                "operationId": "update_sampletemp",
                "description": "update sampletemp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "sampletemp"
                ],
                "operationId": "delete_sampletemp",
                "description": "delete sampletemp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-sampletemp"
                },
                "tags": [
                    "sampletemp"
                ],
                "operationId": "increment_sampletemp",
                "description": "increment sampletemp",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/weixinuserinfo": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "weixinuserinfo"
                ],
                "operationId": "list_weixinuserinfo",
                "description": "list weixinuserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-weixinuserinfo"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-weixinuserinfo"
                },
                "tags": [
                    "weixinuserinfo"
                ],
                "operationId": "create_weixinuserinfo",
                "description": "create weixinuserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/weixinuserinfo/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "weixinuserinfo"
                ],
                "operationId": "read_weixinuserinfo",
                "description": "read weixinuserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-weixinuserinfo"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-weixinuserinfo"
                },
                "tags": [
                    "weixinuserinfo"
                ],
                "operationId": "update_weixinuserinfo",
                "description": "update weixinuserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "weixinuserinfo"
                ],
                "operationId": "delete_weixinuserinfo",
                "description": "delete weixinuserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-weixinuserinfo"
                },
                "tags": [
                    "weixinuserinfo"
                ],
                "operationId": "increment_weixinuserinfo",
                "description": "increment weixinuserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/wxpusherapps": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "wxpusherapps"
                ],
                "operationId": "list_wxpusherapps",
                "description": "list wxpusherapps",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-wxpusherapps"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-wxpusherapps"
                },
                "tags": [
                    "wxpusherapps"
                ],
                "operationId": "create_wxpusherapps",
                "description": "create wxpusherapps",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/wxpusherapps/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "wxpusherapps"
                ],
                "operationId": "read_wxpusherapps",
                "description": "read wxpusherapps",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-wxpusherapps"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-wxpusherapps"
                },
                "tags": [
                    "wxpusherapps"
                ],
                "operationId": "update_wxpusherapps",
                "description": "update wxpusherapps",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "wxpusherapps"
                ],
                "operationId": "delete_wxpusherapps",
                "description": "delete wxpusherapps",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-wxpusherapps"
                },
                "tags": [
                    "wxpusherapps"
                ],
                "operationId": "increment_wxpusherapps",
                "description": "increment wxpusherapps",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/records/wxpusheruserinfo": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/size"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "wxpusheruserinfo"
                ],
                "operationId": "list_wxpusheruserinfo",
                "description": "list wxpusheruserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/list-wxpusheruserinfo"
                    }
                }
            },
            "post": {
                "requestBody": {
                    "$ref": "#/components/requestBodies/create-wxpusheruserinfo"
                },
                "tags": [
                    "wxpusheruserinfo"
                ],
                "operationId": "create_wxpusheruserinfo",
                "description": "create wxpusheruserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/pk_integer"
                    }
                }
            }
        },
        "/records/wxpusheruserinfo/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    },
                    {
                        "$ref": "#/components/parameters/include"
                    },
                    {
                        "$ref": "#/components/parameters/exclude"
                    },
                    {
                        "$ref": "#/components/parameters/join"
                    }
                ],
                "tags": [
                    "wxpusheruserinfo"
                ],
                "operationId": "read_wxpusheruserinfo",
                "description": "read wxpusheruserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/read-wxpusheruserinfo"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/update-wxpusheruserinfo"
                },
                "tags": [
                    "wxpusheruserinfo"
                ],
                "operationId": "update_wxpusheruserinfo",
                "description": "update wxpusheruserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "tags": [
                    "wxpusheruserinfo"
                ],
                "operationId": "delete_wxpusheruserinfo",
                "description": "delete wxpusheruserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pk"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/increment-wxpusheruserinfo"
                },
                "tags": [
                    "wxpusheruserinfo"
                ],
                "operationId": "increment_wxpusheruserinfo",
                "description": "increment wxpusheruserinfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rows_affected"
                    }
                }
            }
        },
        "/status/ping": {
            "get": {
                "tags": [
                    "status"
                ],
                "operationId": "ping_status",
                "description": "Request API 'ping' status",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ping-status"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "pk_integer": {
                "description": "inserted primary key value (integer)",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "pk_string": {
                "description": "inserted primary key value (string)",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "rows_affected": {
                "description": "number of rows affected (integer)",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "list-article": {
                "description": "list of article records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-article"
                        }
                    }
                }
            },
            "read-article": {
                "description": "single article record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-article"
                        }
                    }
                }
            },
            "list-comments": {
                "description": "list of comments records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-comments"
                        }
                    }
                }
            },
            "read-comments": {
                "description": "single comments record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-comments"
                        }
                    }
                }
            },
            "list-fileproject": {
                "description": "list of fileproject records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-fileproject"
                        }
                    }
                }
            },
            "read-fileproject": {
                "description": "single fileproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-fileproject"
                        }
                    }
                }
            },
            "list-fileprojectuser": {
                "description": "list of fileprojectuser records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-fileprojectuser"
                        }
                    }
                }
            },
            "read-fileprojectuser": {
                "description": "single fileprojectuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-fileprojectuser"
                        }
                    }
                }
            },
            "list-filerole": {
                "description": "list of filerole records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-filerole"
                        }
                    }
                }
            },
            "read-filerole": {
                "description": "single filerole record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-filerole"
                        }
                    }
                }
            },
            "list-fileroleproject": {
                "description": "list of fileroleproject records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-fileroleproject"
                        }
                    }
                }
            },
            "read-fileroleproject": {
                "description": "single fileroleproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-fileroleproject"
                        }
                    }
                }
            },
            "list-fileuser": {
                "description": "list of fileuser records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-fileuser"
                        }
                    }
                }
            },
            "read-fileuser": {
                "description": "single fileuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-fileuser"
                        }
                    }
                }
            },
            "list-fileversion": {
                "description": "list of fileversion records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-fileversion"
                        }
                    }
                }
            },
            "read-fileversion": {
                "description": "single fileversion record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-fileversion"
                        }
                    }
                }
            },
            "list-logs": {
                "description": "list of logs records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-logs"
                        }
                    }
                }
            },
            "read-logs": {
                "description": "single logs record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-logs"
                        }
                    }
                }
            },
            "list-mp": {
                "description": "list of mp records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-mp"
                        }
                    }
                }
            },
            "read-mp": {
                "description": "single mp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-mp"
                        }
                    }
                }
            },
            "list-nsgame": {
                "description": "list of nsgame records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-nsgame"
                        }
                    }
                }
            },
            "read-nsgame": {
                "description": "single nsgame record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-nsgame"
                        }
                    }
                }
            },
            "list-nsorder": {
                "description": "list of nsorder records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-nsorder"
                        }
                    }
                }
            },
            "read-nsorder": {
                "description": "single nsorder record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-nsorder"
                        }
                    }
                }
            },
            "list-nsuser": {
                "description": "list of nsuser records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-nsuser"
                        }
                    }
                }
            },
            "read-nsuser": {
                "description": "single nsuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-nsuser"
                        }
                    }
                }
            },
            "list-sampletemp": {
                "description": "list of sampletemp records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-sampletemp"
                        }
                    }
                }
            },
            "read-sampletemp": {
                "description": "single sampletemp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-sampletemp"
                        }
                    }
                }
            },
            "list-weixinuserinfo": {
                "description": "list of weixinuserinfo records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-weixinuserinfo"
                        }
                    }
                }
            },
            "read-weixinuserinfo": {
                "description": "single weixinuserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-weixinuserinfo"
                        }
                    }
                }
            },
            "list-wxpusherapps": {
                "description": "list of wxpusherapps records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-wxpusherapps"
                        }
                    }
                }
            },
            "read-wxpusherapps": {
                "description": "single wxpusherapps record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-wxpusherapps"
                        }
                    }
                }
            },
            "list-wxpusheruserinfo": {
                "description": "list of wxpusheruserinfo records",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/list-wxpusheruserinfo"
                        }
                    }
                }
            },
            "read-wxpusheruserinfo": {
                "description": "single wxpusheruserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/read-wxpusheruserinfo"
                        }
                    }
                }
            },
            "ping-status": {
                "description": "ping status record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ping-status"
                        }
                    }
                }
            }
        },
        "schemas": {
            "list-article": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "title": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "content": {
                                    "type": "string",
                                    "format": "large-string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                },
                                "author": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                },
                                "mobile": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "head": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-article": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "author": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "mobile": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "head": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "read-article": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "author": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "mobile": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "head": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "update-article": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "author": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "mobile": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "head": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "increment-article": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "author": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "mobile": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "head": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "list-comments": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "post_id": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "user_id": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "message": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "image": {
                                    "type": "string",
                                    "format": "large-byte",
                                    "nullable": true,
                                    "pattern": "^[A-Za-z0-9+/]*=*$"
                                }
                            }
                        }
                    }
                }
            },
            "create-comments": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "post_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "format": "large-byte",
                        "nullable": true,
                        "pattern": "^[A-Za-z0-9+/]*=*$"
                    }
                }
            },
            "read-comments": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "post_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "format": "large-byte",
                        "nullable": true,
                        "pattern": "^[A-Za-z0-9+/]*=*$"
                    }
                }
            },
            "update-comments": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "post_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "format": "large-byte",
                        "nullable": true,
                        "pattern": "^[A-Za-z0-9+/]*=*$"
                    }
                }
            },
            "increment-comments": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "post_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "format": "large-byte",
                        "nullable": true,
                        "pattern": "^[A-Za-z0-9+/]*=*$"
                    }
                }
            },
            "list-fileproject": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": [
                                        "fileprojectuser.projectId",
                                        "fileroleproject.projectId",
                                        "fileversion.projectId"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "path": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-fileproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.projectId",
                            "fileroleproject.projectId",
                            "fileversion.projectId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "read-fileproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.projectId",
                            "fileroleproject.projectId",
                            "fileversion.projectId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "update-fileproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.projectId",
                            "fileroleproject.projectId",
                            "fileversion.projectId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "increment-fileproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.projectId",
                            "fileroleproject.projectId",
                            "fileversion.projectId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "list-fileprojectuser": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "projectId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "fileproject"
                                },
                                "userId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "fileuser"
                                },
                                "updateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-fileprojectuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileuser"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "read-fileprojectuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileuser"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "update-fileprojectuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileuser"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "increment-fileprojectuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileuser"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "list-filerole": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": [
                                        "fileroleproject.roleId",
                                        "fileuser.roleId"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "pattern": "^.{0,255}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-filerole": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileroleproject.roleId",
                            "fileuser.roleId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "read-filerole": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileroleproject.roleId",
                            "fileuser.roleId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "update-filerole": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileroleproject.roleId",
                            "fileuser.roleId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "increment-filerole": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileroleproject.roleId",
                            "fileuser.roleId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "list-fileroleproject": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "addFlag": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "deleteFlag": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "editFlag": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "viewFlag": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "auditFlag": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "projectId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "fileproject"
                                },
                                "roleId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "filerole"
                                }
                            }
                        }
                    }
                }
            },
            "create-fileroleproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "addFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "deleteFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "editFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "viewFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "auditFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "read-fileroleproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "addFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "deleteFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "editFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "viewFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "auditFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "update-fileroleproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "addFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "deleteFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "editFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "viewFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "auditFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "increment-fileroleproject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "addFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "deleteFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "editFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "viewFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "auditFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "list-fileuser": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": [
                                        "fileprojectuser.userId"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "passwd": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "roleId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "filerole"
                                }
                            }
                        }
                    }
                }
            },
            "create-fileuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.userId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "passwd": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "read-fileuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.userId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "passwd": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "update-fileuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.userId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "passwd": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "increment-fileuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "fileprojectuser.userId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "passwd": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "filerole"
                    }
                }
            },
            "list-fileversion": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "path": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "projectId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "fileproject"
                                },
                                "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                },
                                "endTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-fileversion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "read-fileversion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "update-fileversion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "increment-fileversion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "projectId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "fileproject"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "list-logs": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "appId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "appName": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "success": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                },
                                "lvl": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "target": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "message": {
                                    "type": "string",
                                    "format": "large-string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                },
                                "stack": {
                                    "type": "string",
                                    "format": "large-string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                }
                            }
                        }
                    }
                }
            },
            "create-logs": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "lvl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "target": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "stack": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    }
                }
            },
            "read-logs": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "lvl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "target": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "stack": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    }
                }
            },
            "update-logs": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "lvl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "target": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "stack": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    }
                }
            },
            "increment-logs": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    },
                    "lvl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "target": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "message": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    },
                    "stack": {
                        "type": "string",
                        "format": "large-string",
                        "nullable": true,
                        "pattern": "^.*$"
                    }
                }
            },
            "list-mp": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "accessToken": {
                                    "type": "string",
                                    "maxLength": 512,
                                    "nullable": true,
                                    "pattern": "^.{0,512}$"
                                },
                                "expiresIn": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "createTime": {
                                    "type": "string",
                                    "maxLength": 20,
                                    "nullable": true,
                                    "pattern": "^.{0,20}$"
                                },
                                "appID": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-mp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "pattern": "^.{0,512}$"
                    },
                    "expiresIn": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createTime": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true,
                        "pattern": "^.{0,20}$"
                    },
                    "appID": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "read-mp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "pattern": "^.{0,512}$"
                    },
                    "expiresIn": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createTime": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true,
                        "pattern": "^.{0,20}$"
                    },
                    "appID": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "update-mp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "pattern": "^.{0,512}$"
                    },
                    "expiresIn": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createTime": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true,
                        "pattern": "^.{0,20}$"
                    },
                    "appID": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "increment-mp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "pattern": "^.{0,512}$"
                    },
                    "expiresIn": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "createTime": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true,
                        "pattern": "^.{0,20}$"
                    },
                    "appID": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "list-nsgame": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": [
                                        "nsorder.gameId"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "desc": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "content": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "image": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "userId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "nsuser"
                                },
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                                }
                            }
                        }
                    }
                }
            },
            "create-nsgame": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsorder.gameId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "desc": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "read-nsgame": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsorder.gameId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "desc": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "update-nsgame": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsorder.gameId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "desc": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "increment-nsgame": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsorder.gameId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "desc": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "list-nsorder": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                },
                                "endTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                },
                                "gameId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "nsgame"
                                },
                                "fromUserId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "nsuser"
                                },
                                "toUserId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-references": "nsuser"
                                },
                                "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-nsorder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "gameId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsgame"
                    },
                    "fromUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "toUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    }
                }
            },
            "read-nsorder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "gameId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsgame"
                    },
                    "fromUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "toUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    }
                }
            },
            "update-nsorder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "gameId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsgame"
                    },
                    "fromUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "toUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    }
                }
            },
            "increment-nsorder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    },
                    "gameId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsgame"
                    },
                    "fromUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "toUserId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-references": "nsuser"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    }
                }
            },
            "list-nsuser": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": [
                                        "nsgame.userId",
                                        "nsorder.fromUserId",
                                        "nsorder.toUserId"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "pattern": "^.{0,255}$"
                                },
                                "username": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "pattern": "^.{0,255}$"
                                },
                                "payCount": {
                                    "type": "number",
                                    "format": "double",
                                    "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                                },
                                "incomeCount": {
                                    "type": "number",
                                    "format": "double",
                                    "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                                }
                            }
                        }
                    }
                }
            },
            "create-nsuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsgame.userId",
                            "nsorder.fromUserId",
                            "nsorder.toUserId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "payCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    },
                    "incomeCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "read-nsuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsgame.userId",
                            "nsorder.fromUserId",
                            "nsorder.toUserId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "payCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    },
                    "incomeCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "update-nsuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsgame.userId",
                            "nsorder.fromUserId",
                            "nsorder.toUserId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "payCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    },
                    "incomeCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "increment-nsuser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": [
                            "nsgame.userId",
                            "nsorder.fromUserId",
                            "nsorder.toUserId"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "payCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    },
                    "incomeCount": {
                        "type": "number",
                        "format": "double",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?$"
                    }
                }
            },
            "list-sampletemp": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "appId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "temp": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "redirectUrl": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "redirectFlag": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "pattern": "^(true|false)$"
                                }
                            }
                        }
                    }
                }
            },
            "create-sampletemp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "temp": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    }
                }
            },
            "read-sampletemp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "temp": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    }
                }
            },
            "update-sampletemp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "temp": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    }
                }
            },
            "increment-sampletemp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "temp": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redirectFlag": {
                        "type": "boolean",
                        "nullable": true,
                        "pattern": "^(true|false)$"
                    }
                }
            },
            "list-weixinuserinfo": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "site": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "userId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "sk": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "openid": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "province": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "nickName": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "language": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "gender": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "country": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "city": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "avatarUrl": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "roleId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "update_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-weixinuserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "site": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "openid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "province": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "nickName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "gender": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "read-weixinuserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "site": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "openid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "province": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "nickName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "gender": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "update-weixinuserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "site": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "openid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "province": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "nickName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "gender": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "increment-weixinuserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "site": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "openid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "province": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "nickName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "gender": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "list-wxpusherapps": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "appId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "appName": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "appToken": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "pattern": "^.{0,255}$"
                                },
                                "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "pushmsg": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "redrictUrl": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "userTip": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-wxpusherapps": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "appToken": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "pushmsg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redrictUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userTip": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "read-wxpusherapps": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "appToken": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "pushmsg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redrictUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userTip": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "update-wxpusherapps": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "appToken": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "pushmsg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redrictUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userTip": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "increment-wxpusherapps": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "appToken": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.{0,255}$"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "pushmsg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "redrictUrl": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userTip": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    }
                }
            },
            "list-wxpusheruserinfo": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$",
                                    "x-primary-key": true,
                                    "x-referenced": []
                                },
                                "appId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "appName": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "source": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "userName": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "userHeadImg": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "time": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "uid": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "sk": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true,
                                    "pattern": "^.{0,255}$"
                                },
                                "userId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "roleId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "pattern": "^-?[0-9]{1,10}$"
                                },
                                "update_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                                }
                            }
                        }
                    }
                }
            },
            "create-wxpusheruserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userHeadImg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "time": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "uid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "read-wxpusheruserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userHeadImg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "time": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "uid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "update-wxpusheruserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userHeadImg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "time": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "uid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "increment-wxpusheruserinfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$",
                        "x-primary-key": true,
                        "x-referenced": []
                    },
                    "appId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "appName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userName": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userHeadImg": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "time": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "uid": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "sk": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "pattern": "^.{0,255}$"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "pattern": "^-?[0-9]{1,10}$"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "ping-status": {
                "type": "object",
                "required": [
                    "db",
                    "cache"
                ],
                "properties": {
                    "db": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cache": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "requestBodies": {
            "create-article": {
                "description": "single article record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-article"
                        }
                    }
                }
            },
            "update-article": {
                "description": "single article record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-article"
                        }
                    }
                }
            },
            "increment-article": {
                "description": "single article record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-article"
                        }
                    }
                }
            },
            "create-comments": {
                "description": "single comments record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-comments"
                        }
                    }
                }
            },
            "update-comments": {
                "description": "single comments record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-comments"
                        }
                    }
                }
            },
            "increment-comments": {
                "description": "single comments record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-comments"
                        }
                    }
                }
            },
            "create-fileproject": {
                "description": "single fileproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-fileproject"
                        }
                    }
                }
            },
            "update-fileproject": {
                "description": "single fileproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-fileproject"
                        }
                    }
                }
            },
            "increment-fileproject": {
                "description": "single fileproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-fileproject"
                        }
                    }
                }
            },
            "create-fileprojectuser": {
                "description": "single fileprojectuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-fileprojectuser"
                        }
                    }
                }
            },
            "update-fileprojectuser": {
                "description": "single fileprojectuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-fileprojectuser"
                        }
                    }
                }
            },
            "increment-fileprojectuser": {
                "description": "single fileprojectuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-fileprojectuser"
                        }
                    }
                }
            },
            "create-filerole": {
                "description": "single filerole record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-filerole"
                        }
                    }
                }
            },
            "update-filerole": {
                "description": "single filerole record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-filerole"
                        }
                    }
                }
            },
            "increment-filerole": {
                "description": "single filerole record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-filerole"
                        }
                    }
                }
            },
            "create-fileroleproject": {
                "description": "single fileroleproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-fileroleproject"
                        }
                    }
                }
            },
            "update-fileroleproject": {
                "description": "single fileroleproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-fileroleproject"
                        }
                    }
                }
            },
            "increment-fileroleproject": {
                "description": "single fileroleproject record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-fileroleproject"
                        }
                    }
                }
            },
            "create-fileuser": {
                "description": "single fileuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-fileuser"
                        }
                    }
                }
            },
            "update-fileuser": {
                "description": "single fileuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-fileuser"
                        }
                    }
                }
            },
            "increment-fileuser": {
                "description": "single fileuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-fileuser"
                        }
                    }
                }
            },
            "create-fileversion": {
                "description": "single fileversion record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-fileversion"
                        }
                    }
                }
            },
            "update-fileversion": {
                "description": "single fileversion record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-fileversion"
                        }
                    }
                }
            },
            "increment-fileversion": {
                "description": "single fileversion record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-fileversion"
                        }
                    }
                }
            },
            "create-logs": {
                "description": "single logs record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-logs"
                        }
                    }
                }
            },
            "update-logs": {
                "description": "single logs record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-logs"
                        }
                    }
                }
            },
            "increment-logs": {
                "description": "single logs record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-logs"
                        }
                    }
                }
            },
            "create-mp": {
                "description": "single mp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-mp"
                        }
                    }
                }
            },
            "update-mp": {
                "description": "single mp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-mp"
                        }
                    }
                }
            },
            "increment-mp": {
                "description": "single mp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-mp"
                        }
                    }
                }
            },
            "create-nsgame": {
                "description": "single nsgame record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-nsgame"
                        }
                    }
                }
            },
            "update-nsgame": {
                "description": "single nsgame record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-nsgame"
                        }
                    }
                }
            },
            "increment-nsgame": {
                "description": "single nsgame record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-nsgame"
                        }
                    }
                }
            },
            "create-nsorder": {
                "description": "single nsorder record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-nsorder"
                        }
                    }
                }
            },
            "update-nsorder": {
                "description": "single nsorder record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-nsorder"
                        }
                    }
                }
            },
            "increment-nsorder": {
                "description": "single nsorder record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-nsorder"
                        }
                    }
                }
            },
            "create-nsuser": {
                "description": "single nsuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-nsuser"
                        }
                    }
                }
            },
            "update-nsuser": {
                "description": "single nsuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-nsuser"
                        }
                    }
                }
            },
            "increment-nsuser": {
                "description": "single nsuser record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-nsuser"
                        }
                    }
                }
            },
            "create-sampletemp": {
                "description": "single sampletemp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-sampletemp"
                        }
                    }
                }
            },
            "update-sampletemp": {
                "description": "single sampletemp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-sampletemp"
                        }
                    }
                }
            },
            "increment-sampletemp": {
                "description": "single sampletemp record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-sampletemp"
                        }
                    }
                }
            },
            "create-weixinuserinfo": {
                "description": "single weixinuserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-weixinuserinfo"
                        }
                    }
                }
            },
            "update-weixinuserinfo": {
                "description": "single weixinuserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-weixinuserinfo"
                        }
                    }
                }
            },
            "increment-weixinuserinfo": {
                "description": "single weixinuserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-weixinuserinfo"
                        }
                    }
                }
            },
            "create-wxpusherapps": {
                "description": "single wxpusherapps record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-wxpusherapps"
                        }
                    }
                }
            },
            "update-wxpusherapps": {
                "description": "single wxpusherapps record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-wxpusherapps"
                        }
                    }
                }
            },
            "increment-wxpusherapps": {
                "description": "single wxpusherapps record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-wxpusherapps"
                        }
                    }
                }
            },
            "create-wxpusheruserinfo": {
                "description": "single wxpusheruserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/create-wxpusheruserinfo"
                        }
                    }
                }
            },
            "update-wxpusheruserinfo": {
                "description": "single wxpusheruserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/update-wxpusheruserinfo"
                        }
                    }
                }
            },
            "increment-wxpusheruserinfo": {
                "description": "single wxpusheruserinfo record",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/increment-wxpusheruserinfo"
                        }
                    }
                }
            }
        },
        "parameters": {
            "pk": {
                "name": "id",
                "in": "path",
                "schema": {
                    "type": "string"
                },
                "description": "primary key value",
                "required": true
            },
            "filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": "Filters to be applied. Each filter consists of a column, an operator and a value (comma separated). Example: id,eq,1",
                "required": false
            },
            "include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "description": "Columns you want to include in the output (comma separated). Example: posts.*,categories.name",
                "required": false
            },
            "exclude": {
                "name": "exclude",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "description": "Columns you want to exclude from the output (comma separated). Example: posts.content",
                "required": false
            },
            "order": {
                "name": "order",
                "in": "query",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": "Column you want to sort on and the sort direction (comma separated). Example: id,desc",
                "required": false
            },
            "size": {
                "name": "size",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "description": "Maximum number of results (for top lists). Example: 10",
                "required": false
            },
            "page": {
                "name": "page",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "description": "Page number and page size (comma separated). Example: 1,10",
                "required": false
            },
            "join": {
                "name": "join",
                "in": "query",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": "Paths (comma separated) to related entities that you want to include. Example: comments,users",
                "required": false
            }
        }
    },
    "tags": [
        {
            "name": "status",
            "description": "status operations"
        },
        {
            "name": "comments",
            "description": "comments operations"
        },
        {
            "name": "fileproject",
            "description": "fileproject operations"
        },
        {
            "name": "fileprojectuser",
            "description": "fileprojectuser operations"
        },
        {
            "name": "filerole",
            "description": "filerole operations"
        },
        {
            "name": "fileroleproject",
            "description": "fileroleproject operations"
        },
        {
            "name": "fileuser",
            "description": "fileuser operations"
        },
        {
            "name": "fileversion",
            "description": "fileversion operations"
        },
        {
            "name": "logs",
            "description": "logs operations"
        },
        {
            "name": "mp",
            "description": "mp operations"
        },
        {
            "name": "nsgame",
            "description": "nsgame operations"
        },
        {
            "name": "nsorder",
            "description": "nsorder operations"
        },
        {
            "name": "nsuser",
            "description": "nsuser operations"
        },
        {
            "name": "sampletemp",
            "description": "sampletemp operations"
        },
        {
            "name": "weixinuserinfo",
            "description": "weixinuserinfo operations"
        },
        {
            "name": "wxpusherapps",
            "description": "wxpusherapps operations"
        },
        {
            "name": "wxpusheruserinfo",
            "description": "wxpusheruserinfo operations"
        }
    ]
}